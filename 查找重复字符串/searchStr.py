# 查找字符串中重复的子串，并输出重复的次数
'''
思路如下：对一个字符串，从第一个字符开始，检查前两个字符组成的字符串，是否被它后面的子串包含。如果没有包含，
则从第二个字符开始同样的方法检查；
如果包含则统计包含数量。方法是：被检查的子串根据重复串下标削去重复的部分多次检查得到重复次数，最后将重复串和次数放入hashtable。
然后针对第二个字符，依次向后扩展可能的重复串，即检查前3个字符组成的串是否重复，同样的方法统计，放入hashMap。
然后移动到第三个字符，依次进行。可以看到需要处理的字符串是依次减少的。为简略，这里省去类方法，直接在main函数里写。
源码如下：

'''

import re
s='aabbeeddaaabcccabc'
L =filter(None,re.split(r',|',s))
[x for x in L if L.count(x) == 1]
list(set(L))
print(','.join((list(set(L)))))